/*背景色と同じテキスト*/
:root {
    --dark-color: hsl(var(--hue), 100%, 9%);
    --light-color: hsl(var(--hue), 95%, 98%);
    --base: hsl(var(--hue), 95%, 50%);
    --complimentary1: hsl(var(--hue-complimentary1), 95%, 50%);
    --complimentary2: hsl(var(--hue-complimentary2), 95%, 50%);

    --font-family: "Poppins", system-ui;

    --bg-gradient: linear-gradient(to bottom,
            hsl(var(--hue), 95%, 99%),
            hsl(var(--hue), 95%, 84%));
}

* {
    margin: 3px;
    padding: 3px;
    box-sizing: border-box;
}

html {
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
}

body {
    max-width: 1920px;
    min-height: 100vh;
    display: grid;
    place-items: center;
    padding: 2rem;
    font-family: var(--font-family);
    color: var(--dark-color);
    background: var(--bg-gradient);
}

/*背景*/
.backEfect {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    pointer-events: none;
    z-index: -1;
}

/*太文字*/
strong {
    font-weight: 600;
}

/*半透明の囲い*/
.overlay_profile {
    margin-bottom: 35px;
    width: 90%;
    max-width: 1340px;
    max-height: 1080px;
    padding: 8rem 6rem;
    display: flex;
    align-items: center;
    background: rgba(255, 255, 255, 0.249);
    box-shadow: 0 0.75rem 2rem 0 rgba(0, 0, 0, 0.1);
    border-radius: 2rem;
    border: 1px solid rgba(255, 255, 255, 0.125);

}

.overlay_Skill {
    margin-bottom: 35px;
    width: 90%;
    max-width: 1140px;
    max-height: 320px;
    padding: 8rem 6rem;
    display: flex;
    align-items: center;
    background: rgba(255, 255, 255, 0.249);
    box-shadow: 0 0.75rem 2rem 0 rgba(0, 0, 0, 0.1);
    border-radius: 2rem;
    border: 1px solid rgba(255, 255, 255, 0.125);
}

.overlay_Works {
    margin-bottom: 35px;
    width: 90%;
    max-width: 1140px;
    max-height: 350px;
    padding: 8rem 6rem;
    display: flex;
    align-items: center;
    background: rgba(255, 255, 255, 0.249);
    box-shadow: 0 0.75rem 2rem 0 rgba(0, 0, 0, 0.1);
    border-radius: 2rem;
    border: 1px solid rgba(255, 255, 255, 0.125);
}

.overlay_Awords {
    margin-bottom: 35px;
    width: 90%;
    max-width: 1140px;
    max-height: 350px;
    padding: 8rem 6rem;
    display: flex;
    align-items: center;
    background: rgba(255, 255, 255, 0.249);
    box-shadow: 0 0.75rem 2rem 0 rgba(0, 0, 0, 0.1);
    border-radius: 2rem;
    border: 1px solid rgba(255, 255, 255, 0.125);
}

.overlay__inner {
    max-width: 364rem;
}

.overlay__title {
    font-size: 2.8rem;
    line-height: 3.75rem;
    font-weight: 100;
    letter-spacing: -0.025em;
    margin-top: 0.1rem;
    margin-bottom: 0.7rem;
}

.text-gradient {
    background-image: linear-gradient(45deg,
            var(--base) 25%,
            var(--complimentary2));
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    -moz-background-clip: text;
    -moz-text-fill-color: transparent;
}

/*ボタン*/
.overlay__btns {
    width: 100%;
    max-width: 30rem;
    display: flex;
}

.overlay__btn {
    width: 200px;
    height: 50px;
    display: flex;
    justify-content: center;
    align-items: center;
    font-size: 1rem;
    font-weight: 600;
    color: var(--dark-color);
    /* テキストの色を黒に変更 */
    background: rgba(255, 255, 255, 0.5);
    /* 白の半透明の背景色 */
    border: none;
    border-radius: 0.5rem;
    transition: background 0.3s ease;
    /* 背景色の変化をアニメーション化 */
    transition: transform 0.2s ease, box-shadow 0.2s ease, background 0.2s ease;

    margin: 10px;
    /* ボタンの間隔を調整 */
    cursor: pointer;
}

.overlay__btn:hover {
    background: rgba(255, 255, 255, 0.7);
    /* マウスカーソルが重なった時の背景色 */
    transform: scale(1.05);
    /* 少し拡大表示されるようにスケールを変更 */
    box-shadow: 0 10px 20px rgba(0, 0, 0, 0.3);
    /* 影を追加 */
}

a {
    text-decoration: none;
    color: var(--dark-color);
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

@media (prefers-contrast: high) {
    .backEfect {
        display: none;
    }
}

@media only screen and (max-width: 1140px) {
    .overlay {
        padding: 8rem 4rem;
    }
}

@media only screen and (max-width: 840px) {
    body {
        padding: 1.5rem;
    }

    .overlay {
        padding: 4rem;
        height: auto;
    }

    .overlay__title {
        font-size: 2.25rem;
        line-height: 2rem;
        margin-bottom: 1.5rem;
    }

    .overlay__description {
        font-size: 0.875rem;
        line-height: 1.5rem;
        margin-bottom: 2.5rem;
        white-space: nowrap;
        max-width: 300px;
        /* テキストの最大幅を指定します */

        text-overflow: ellipsis;
        /* 要素内の内容がはみ出た場合に省略記号（...）で表示します */

    }
}

@media only screen and (max-width: 600px) {
    .overlay {
        padding: 1.5rem;
    }

    .overlay__btns {
        flex-wrap: wrap;
    }

    .overlay__btn {
        width: 100%;
        font-size: 0.75rem;
        margin-right: 0;
    }

    .overlay__btn:first-child {
        margin-bottom: 1rem;
    }
}

/* .c-bnr.texturefadeクラスは、テクスチャがフェードするエフェクトを持つ要素を定義します。 */
.c-bnr.texturefade {
    position: relative;
    /* 相対的な位置を設定し、子要素の配置を制御します。 */
    z-index: 1;
    /* 他の要素との重なり順序を設定します。 */
    overflow: hidden;
    /* 要素からはみ出る部分を非表示にします。 */
    display: inline-block;
    /* インラインブロック要素として表示します。 */
    width: 65%;
    height: auto;
}

/* .normal-imageクラスは、通常の画像を定義します。 */
.c-bnr.texturefade .normal-image {
    width: 50%;
    /* 通常の画像の幅を50%に設定します。 */
    height: auto;
    /* 高さを自動調整し、アスペクト比を保ちます。 */
    display: block;
    /* ブロック要素として表示します。 */
    transition: filter 0.5s ease;
    /* 0.5秒のフィルター変化アニメーションを設定します。 */
}

/* .hover-imageクラスは、ホバー時に表示する別の画像を定義します。 */
.c-bnr.texturefade .hover-image {
    width: 10%;
    /* ホバー時の画像の幅を10%に設定します。 */
    bottom: 5%;
    height: auto;
    /* 高さを自動調整し、アスペクト比を保ちます。 */
    display: block;
    /* ブロック要素として表示します。 */
    opacity: 0;
    /* 初期状態では透明に設定します。 */
    position: absolute;
    /* 絶対位置指定を行います。親要素に対して相対的な位置を取ります。 */
    top: 0;
    /* 上端からの位置を0に設定します。 */
    right: 0px;
    /* 左端からの位置を0に設定します。 */
    z-index: 2;
    /* 通常の画像の上に配置します。 */
    transition: opacity 0.5s ease;
    /* 1.8秒の不透明度変化アニメーションを設定します。 */
    border-radius: 100%;
    /* 画像を丸くする */
}

/* 2枚目の画像に適用するクラス */
.c-bnr.texturefade .hover-image.second-image {
    left: 6%;
    /* 左端からの位置を20%に設定します。 */
    top: 35%;
    z-index: 4;
    /* 通常の画像と2枚目の画像の上に配置します。 */
}

/* 3枚目の画像に適用するクラス */
.c-bnr.texturefade .hover-image.third-image {
    left: 21%;
    /* 左端からの位置を40%に設定します。 */
    top: 35%;
    z-index: 5;
    /* 通常の画像、2枚目の画像、3枚目の画像の上に配置します。 */
}

/* 3枚目の画像に適用するクラス */
.c-bnr.texturefade .hover-image.forth-image {
    left: 36%;
    /* 左端からの位置を40%に設定します。 */
    top: 35%;
    z-index: 5;
    /* 通常の画像、2枚目の画像、3枚目の画像の上に配置します。 */
}

/* .text-overlayクラスは、テキストオーバーレイを定義します。 */
.c-bnr.texturefade .text-overlay {
    position: absolute;
    /* 絶対位置指定を行います。 */
    background-color: rgba(0, 0, 0, 0.7);
    /* 背景色を黒の半透明に設定します。 */
    padding: 10px 20px;
    /* 上下左右に10pxのパディングを設定します。 */
    opacity: 0;
    /* 初期状態では透明に設定します。 */
    transition: opacity 0.3s ease;
    /* 0.3秒の不透明度変化アニメーションを設定します。 */
    z-index: 3;
    /* 画像や通常のテキストの上に配置します。 */
}

/* ホバー時のスタイルを設定します。 */
.c-bnr.texturefade:hover .normal-image {
    filter: blur(3px);
    /* 通常の画像に3pxのぼかしを適用します。 */
}

.c-bnr.texturefade:hover .hover-image {
    opacity: 1;
    /* ホバー時に別の画像を不透明にします。 */
}

.c-bnr.texturefade:hover .text-overlay {
    opacity: 1;
    /* ホバー時にテキストを不透明にします。 */
}

table {
    margin: auto;
}

#youtubelink,
#googlelink {
    margin-top: 175px;
    margin-left: 100px;
    text-decoration: none;
    position: relative;
    display: inline-block;
}

#youtubelink::after,
#googlelink::after {
    content: '';
    display: block;
    width: 100%;
    /* 下線の幅を100%に設定して常に表示 */
    height: 2px;
    background-color: black;
    /* 下線の色を指定 */
    position: absolute;
    bottom: 0;
    left: 0;
}

.fadeInAnimation {
    opacity: 0;
    animation: fadeIn 3.0s ease forwards;
}

@keyframes fadeIn {
    from {
        opacity: 0;
    }

    to {
        opacity: 1;
    }
}

canvas {
    display: block;
    margin: 0 auto;
    background-color: #44444434;
    border: 6px solid #ffffff;
}

.arrow {
    /* 通常のスタイル */
    width: 50px;
    height: 50px;
    text-align: center;
    line-height: 50px;
    font-size: 44px;
    cursor: pointer;
    
    user-select: none;
    -moz-user-select: none;
    -webkit-user-select: none;
    -ms-user-select: none;

    /* 特定のプロパティに対するトランジションを設定 */
    transition-property: transform;
    /* トランジションの時間とタイミング関数を設定 */
    transition-duration: 0.3s;
    transition-timing-function: ease-in-out;
}

.arrow:hover {
    transform: translateY(-3.7px);
}

body {
    touch-action: manipulation;
}
